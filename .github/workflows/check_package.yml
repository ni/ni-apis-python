name: Check package

on:
  workflow_call:
    inputs:
      package-name:
        description: 'The name of the package to check.'
        default: ''
        required: true
        type: string
      package-information-path:
        description: 'Path to the JSON file containing package information.'
        default: '/packages.json'
        type: string

jobs:
  get_package_info:
    runs-on: ubuntu-latest
    outputs:
      proto-basepath: ${{ steps.parse_json.outputs.proto-basepath }}
      proto-subpath: ${{ steps.parse_json.outputs.proto-subpath }}
      proto-include-path: ${{ steps.parse_json.outputs.proto-include-path }}
      output-format: ${{ steps.parse_json.outputs.output-format }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get package info from JSON
        id: parse_json
        run: |
          info=$(jq -c --arg name "${{ inputs.package-name }}" '.[$name]' "${{ inputs.package-json-path }}")
          if [ "$info" = "null" ]; then
            echo "Error: Package '${{ inputs.package-name }}' not found in JSON file." >&2
            exit 1
          fi
          echo "Package info: $info"
          echo "proto-basepath=$(echo $info | jq -r '."proto-basepath"')" >> $GITHUB_OUTPUT
          echo "proto-subpath=$(echo $info | jq -r '."proto-subpath"')" >> $GITHUB_OUTPUT
          echo "proto-include-path=$(echo $info | jq -r '."proto-include-path"')" >> $GITHUB_OUTPUT
          echo "output-format=$(echo $info | jq -r '."output-format"')" >> $GITHUB_OUTPUT

  check_codegen:
    name: Check codegen for ${{ inputs.package-name }}
    needs: get_package_info
    uses: ./.github/workflows/check_codegen.yml
    with:
      package-name: ${{ inputs.package-name }}
      proto-basepath: ${{ needs.get_package_info.outputs.proto-basepath }}
      proto-subpath: ${{ needs.get_package_info.outputs.proto-subpath }}
      proto-include-path: ${{ needs.get_package_info.outputs.proto-include-path }}
      output-basepath: ../../packages/${{ inputs.package-name }}/src
      output-format: ${{ needs.get_package_info.outputs.output-format }}
  check_analyzers:
    name: Check analyzers for ${{ inputs.package-name }}
    uses: ./.github/workflows/check_analyzers.yml
    needs: [check_codegen]
    with:
      package-name: ${{ inputs.package-name }}
  check_docs:
    name: Check docs for ${{ inputs.package-name }}
    uses: ./.github/workflows/check_docs.yml
    needs: [check_analyzers]
    with:
      package-name: ${{ inputs.package-name }}