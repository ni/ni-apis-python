name: Run unit tests

on:
  workflow_call:
    inputs:
      package-name:
        description: 'The name of the package folder to check.'
        default: ''
        required: true
        type: string
      package-basepath:
        description: 'The base path of the package to check, relative to the repo root.'
        default: ''
        required: true
        type: string
      python-version:
        description: 'The version of Python to use'
        default: ''
        required: true
        type: string
      os:
        description: 'The name of the OS to use'
        required: true
        type: string

jobs:
  run_unit_tests:
    name: Run unit tests for ${{ inputs.package-name }} with ${{ inputs.python-version }} on ${{ inputs.os }}
    runs-on: ${{ inputs.os }}
    defaults:
      run:
        # Set the working-directory for all steps in this job.
        working-directory: ${{ github.workspace }}/${{ inputs.package-basepath }}/${{ inputs.package-name }}
    strategy:
      # Fail-fast skews the pass/fail ratio and seems to make pytest produce
      # incomplete JUnit XML results.
      fail-fast: false
    steps:
      - name: Check out repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          submodules: true
      - name: Set up Python
        uses: ni/python-actions/setup-python@f0276f7f58868ec0d0d1a86377287c9e6fe0c6e7 # v0.5.0
        id: setup-python
        with:
          python-version: ${{ inputs.python-version }}
      - name: Set up Poetry
        uses: ni/python-actions/setup-poetry@f0276f7f58868ec0d0d1a86377287c9e6fe0c6e7 # v0.5.0
      - name: Run and upload unit tests for ${{ inputs.package-name }}
        uses: ./.github/actions/run_and_upload_unit_tests
        with:
          package-name: ${{ inputs.package-name }}
          package-basepath: ${{ inputs.package-basepath }}
