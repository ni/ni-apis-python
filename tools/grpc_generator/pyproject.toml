[tool.poetry]
name = "ni-apis-grpc-generator"
version = "0.1.0"
license = "MIT"
description = "Python generator for NI gRPC APIs"
authors = ["NI <opensource@ni.com>"]
readme = "README.md"
packages = [{include = "grpc_generator", from = "src"}]

[tool.poetry.scripts]
grpc-generator = "grpc_generator.__main__:cli"
generate-stubs = "grpc_generator.generate_stubs:main"

[tool.poetry.dependencies]
python = "^3.11"
click = "^8.2.1"
# When updating the grpcio-tools version, also update the minimum grpcio version
# and regenerate gRPC stubs.
grpcio-tools = [
  { version = "1.49.1", python = ">=3.9,<3.12" },
  { version = "1.59.0", python = ">=3.12,<3.13" },
  { version = "1.67.0", python = "^3.13" },
]
mypy-protobuf = ">=3.6"

[tool.poetry.group.lint.dependencies]
bandit = { version = ">=1.7", extras = ["toml"] }
ni-python-styleguide = ">=0.4.1"
mypy = ">=1.0"
pyright = { version = ">=1.1.400", extras = ["nodejs"] }

[tool.poetry.group.test.dependencies]
pytest = ">=7.2"
pytest-cov = ">=4.0"
pytest-mock = ">=3.0"

[build-system]
requires = ["poetry-core>=1.8"]
build-backend = "poetry.core.masonry.api"


[tool.bandit]
skips = [
  "B101", # assert_used
]

[tool.black]
line-length = 100

[tool.mypy]
files = "src/,tests/"
namespace_packages = true
strict = true

[tool.pyright]
include = ["src/", "tests/"]

[tool.pytest.ini_options]
addopts = "--strict-markers"
testpaths = ["tests"]
